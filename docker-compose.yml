version: "3.0"
services:
  web:
    build:
      context: ./docker-magento2
    ports:
      - "80:80"
    links:
      - db
    env_file:
      - env
    volumes:
      - /dev/mytheme:/var/www/html/app/design/frontend/mytheme/default
  db:
    image: mysql:5.7.28
    volumes:
      - db-data:/var/lib/mysql
    env_file:
      - env
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8580:80"
    links:
      - db
  storefront:
    build:
      context: ./vue-storefront
      dockerfile: docker/vue-storefront/Dockerfile
    env_file: ./vue-storefront/docker/vue-storefront/default.env
    environment:
      VS_ENV: dev
    network_mode: host
    volumes:
      - "./vue-storefront/babel.config.js:/var/www/babel.config.js"
      - "./vue-storefront/config:/var/www/config"
      - "./vue-storefront/core:/var/www/core"
      - "./vue-storefront/ecosystem.json:/var/www/ecosystem.json"
      - "./vue-storefront/.eslintignore:/var/www/.eslintignore"
      - "./vue-storefront/.eslintrc.js:/var/www/.eslintrc.js"
      - "./vue-storefront/lerna.json:/var/www/lerna.json"
      - "./vue-storefront/tsconfig.json:/var/www/tsconfig.json"
      - "./vue-storefront/tsconfig-build.json:/var/www/tsconfig-build.json"
      - "./vue-storefront/shims.d.ts:/var/www/shims.d.ts"
      - "./vue-storefront/package.json:/var/www/package.json"
      - "./vue-storefront/src:/var/www/src"
      - "./vue-storefront/var:/var/www/var"
    tmpfs:
      - /var/www/dist
    ports:
      - "3000:3000"
  api:
    # image: divante/vue-storefront-api:latest
    build:
      context: ./vue-storefront-api
      dockerfile: docker/vue-storefront-api/Dockerfile
    depends_on:
      - es1
      - redis
    env_file: ./vue-storefront-api/docker/vue-storefront-api/default.env
    environment:
      VS_ENV: dev
    volumes:
      - './vue-storefront-api/config:/var/www/config'
      - './vue-storefront-api/ecosystem.json:/var/www/ecosystem.json'
      - './vue-storefront-api/migrations:/var/www/migrations'
      - './vue-storefront-api/package.json:/var/www/package.json'
      - './vue-storefront-api/babel.config.js:/var/www/babel.config.js'
      - './vue-storefront-api/tsconfig.json:/var/www/tsconfig.json'
      - './vue-storefront-api/nodemon.json:/var/www/nodemon.json'
      - './vue-storefront-api/scripts:/var/www/scripts'
      - './vue-storefront-api/src:/var/www/src'
      - './vue-storefront-api/var:/var/www/var'
    tmpfs:
      - /var/www/dist
    ports:
      - '8080:8080'
  es1:
    container_name: elasticsearch
    build:
      context: ./vue-storefront-api
      dockerfile: docker/elasticsearch/Dockerfile
    volumes:
      - ./vue-storefront-api/docker/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./vue-storefront-api/docker/elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx512m -Xms512m"
  kibana:
    build:
      context: ./vue-storefront-api
      dockerfile: docker/kibana/Dockerfile
    volumes:
      - ./vue-storefront-api/docker/kibana/config/:/usr/share/kibana/config:ro
    ports:
      - "5601:5601"
    depends_on:
      - es1
  redis:
    image: "redis:4-alpine"
    ports:
      - "6379:6379"

volumes:
  db-data:
